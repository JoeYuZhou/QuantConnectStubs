# encoding: utf-8
# module QuantConnect.Algorithm.Framework.Alphas.Serialization calls itself Serialization
# from QuantConnect.Common, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null
# by generator 1.145
# no doc
# no imports

# no functions
# classes

class InsightJsonConverter(TypeChangeJsonConverter[Insight, SerializedInsight]):
    """
    Defines how insights should be serialized to json
    
    InsightJsonConverter()
    """
    PopulateProperties = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """True will populate TResult object returned by QuantConnect.Util.TypeChangeJsonConverter with json properties

"""



class SerializedInsight(object):
    """
    DTO used for serializing an insight that was just generated by an algorithm.
                This type does not contain any of the analysis dependent fields, such as scores
                and estimated value
    
    SerializedInsight()
    SerializedInsight(insight: Insight)
    """
    @staticmethod # known case of __new__
    def __new__(self, insight=None):
        """
        __new__(cls: type)
        __new__(cls: type, insight: Insight)
        """
        pass

    CloseTime = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """See QuantConnect.Algorithm.Framework.Alphas.Insight.CloseTimeUtc

Get: CloseTime(self: SerializedInsight) -> float

Set: CloseTime(self: SerializedInsight) = value
"""

    Confidence = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """See QuantConnect.Algorithm.Framework.Alphas.Insight.Confidence

Get: Confidence(self: SerializedInsight) -> Nullable[float]

Set: Confidence(self: SerializedInsight) = value
"""

    CreatedTime = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """See QuantConnect.Algorithm.Framework.Alphas.Insight.GeneratedTimeUtc

Get: CreatedTime(self: SerializedInsight) -> float

Set: CreatedTime(self: SerializedInsight) = value
"""

    Direction = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """See QuantConnect.Algorithm.Framework.Alphas.Insight.Direction

Get: Direction(self: SerializedInsight) -> InsightDirection

Set: Direction(self: SerializedInsight) = value
"""

    EstimatedValue = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """See QuantConnect.Algorithm.Framework.Alphas.Insight.EstimatedValue

Get: EstimatedValue(self: SerializedInsight) -> Decimal

Set: EstimatedValue(self: SerializedInsight) = value
"""

    GeneratedTime = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Pass-through for QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.CreatedTime

Get: GeneratedTime(self: SerializedInsight) -> float

Set: GeneratedTime(self: SerializedInsight) = value
"""

    GroupId = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """See QuantConnect.Algorithm.Framework.Alphas.Insight.GroupId

Get: GroupId(self: SerializedInsight) -> str

Set: GroupId(self: SerializedInsight) = value
"""

    Id = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """See QuantConnect.Algorithm.Framework.Alphas.Insight.Id

Get: Id(self: SerializedInsight) -> str

Set: Id(self: SerializedInsight) = value
"""

    Magnitude = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """See QuantConnect.Algorithm.Framework.Alphas.Insight.Magnitude

Get: Magnitude(self: SerializedInsight) -> Nullable[float]

Set: Magnitude(self: SerializedInsight) = value
"""

    Period = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """See QuantConnect.Algorithm.Framework.Alphas.Insight.Period

Get: Period(self: SerializedInsight) -> float

Set: Period(self: SerializedInsight) = value
"""

    ReferenceValue = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """See QuantConnect.Algorithm.Framework.Alphas.Insight.ReferenceValue

Get: ReferenceValue(self: SerializedInsight) -> Decimal

Set: ReferenceValue(self: SerializedInsight) = value
"""

    ReferenceValueFinal = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """See QuantConnect.Algorithm.Framework.Alphas.Insight.ReferenceValueFinal

Get: ReferenceValueFinal(self: SerializedInsight) -> Decimal

Set: ReferenceValueFinal(self: SerializedInsight) = value
"""

    ScoreDirection = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """See QuantConnect.Algorithm.Framework.Alphas.InsightScore.Direction

Get: ScoreDirection(self: SerializedInsight) -> float

Set: ScoreDirection(self: SerializedInsight) = value
"""

    ScoreIsFinal = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """See QuantConnect.Algorithm.Framework.Alphas.InsightScore.IsFinalScore

Get: ScoreIsFinal(self: SerializedInsight) -> bool

Set: ScoreIsFinal(self: SerializedInsight) = value
"""

    ScoreMagnitude = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """See QuantConnect.Algorithm.Framework.Alphas.InsightScore.Magnitude

Get: ScoreMagnitude(self: SerializedInsight) -> float

Set: ScoreMagnitude(self: SerializedInsight) = value
"""

    SourceModel = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """See QuantConnect.Algorithm.Framework.Alphas.Insight.SourceModel

Get: SourceModel(self: SerializedInsight) -> str

Set: SourceModel(self: SerializedInsight) = value
"""

    Symbol = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """See QuantConnect.Algorithm.Framework.Alphas.Insight.Symbol
            The symbol's security identifier string

Get: Symbol(self: SerializedInsight) -> str

Set: Symbol(self: SerializedInsight) = value
"""

    Ticker = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """See QuantConnect.Algorithm.Framework.Alphas.Insight.Symbol
            The symbol's ticker at the generated time

Get: Ticker(self: SerializedInsight) -> str

Set: Ticker(self: SerializedInsight) = value
"""

    Type = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """See QuantConnect.Algorithm.Framework.Alphas.Insight.Type

Get: Type(self: SerializedInsight) -> InsightType

Set: Type(self: SerializedInsight) = value
"""

    Weight = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """See QuantConnect.Algorithm.Framework.Alphas.Insight.Weight

Get: Weight(self: SerializedInsight) -> Nullable[float]

Set: Weight(self: SerializedInsight) = value
"""



